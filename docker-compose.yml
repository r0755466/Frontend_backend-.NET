version: '3.8'
services:
  backend:
    build:
      context: ./API
      dockerfile: Dockerfile
    container_name: dotnet-api
    ports:
      - "8000:8000" # Maps host port 8000 to container port 8080 (HTTP)
      - "7296:8081" # Maps host port 7296 to container port 8081 (HTTPS)
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=database;Database=mydb;User=Login;Password=Login1234;
    


    depends_on:
      - database
    networks:
      - app-network

  database:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_DATABASE: mydb
      MYSQL_USER: Login
      MYSQL_PASSWORD: Login1234
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network

  frontend:
    image: node:18-alpine
    container_name: angular-frontend
    build:
      context: ./my-first-app
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./my-first-app:/app
    working_dir: /app
    command: sh -c "npm install && npm start"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
